@page  "/"
@using System.Net.Http
@inject HttpClient Http
@inject NavigationManager NavigationManager

<div class="card m-3">
    <h4 class="card-header">Login</h4>
    <div class="card-body">
        <EditForm Model="@Usuario" OnValidSubmit="HandleValidSubmit" @onreset="HandleReset">
            <DataAnnotationsValidator />

            <div class="form-row">

                <div class="form-group col">
                    <label>E-mail</label>
                    <InputText @bind-Value="Usuario.Email" class="form-control" />
                    <ValidationMessage For="@(() => Usuario.Email)" />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col">
                    <label>Senha</label>
                    <InputText @bind-Value="Usuario.Senha" class="form-control" />
                    <ValidationMessage For="@(() => Usuario.Senha)" />
                </div>
            </div>
            <div class="text-center">
                <button type="submit" class="btn btn-primary">Salvar</button>
                <button type="reset" class="btn btn-secondary">Cancel</button>
            </div>
        </EditForm>
    </div>
</div>

@code {

    private UsuarioDto Usuario = new UsuarioDto();

    private EditContext editContext { get; set; }

    private async Task HandleValidSubmit()
    {
        var teste = await Http.PostAsJsonAsync("/api/Usuarios/login", Usuario);
        NavigationManager.NavigateTo("/Cliente/Usuario");

        if(teste.StatusCode == System.Net.HttpStatusCode.OK) {

            Console.WriteLine("Login efetuado com sucesso");
        }
        else
        {
            Console.WriteLine("Login não efetuado");

        }
    }

    private void HandleReset()
    {
        Usuario = new UsuarioDto();
        editContext = new EditContext(Usuario);
    }


}
